<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDeniedMessageBoxActivity_Action_Description" xml:space="preserve">
    <value>The action denied to the user.</value>
  </data>
  <data name="AccessDeniedMessageBoxActivity_Action_DisplayName" xml:space="preserve">
    <value>Access Action</value>
  </data>
  <data name="AccessDeniedMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Access Denied Message Box</value>
  </data>
  <data name="AddDataColumn_DisplayName" xml:space="preserve">
    <value>Add Data Column</value>
  </data>
  <data name="AddDataRow_DisplayName" xml:space="preserve">
    <value>Add Data Row</value>
  </data>
  <data name="AddRow_Description" xml:space="preserve">
    <value>Add DataRow to DataTable</value>
  </data>
  <data name="AddRow_DisplayName" xml:space="preserve">
    <value>Add DataRow</value>
  </data>
  <data name="ADONet_Category" xml:space="preserve">
    <value>ADO.NET</value>
  </data>
  <data name="AlarmMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Alarm Message Box</value>
  </data>
  <data name="Caption_Description" xml:space="preserve">
    <value>The caption which will display in the message box window bar.</value>
  </data>
  <data name="Caption_DisplayName" xml:space="preserve">
    <value>Caption</value>
  </data>
  <data name="CautionMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Caution Message Box</value>
  </data>
  <data name="ColumnDataType_Description" xml:space="preserve">
    <value>DataType of the column</value>
  </data>
  <data name="ColumnDataType_DisplayName" xml:space="preserve">
    <value>Column DataType</value>
  </data>
  <data name="ColumnName_Description" xml:space="preserve">
    <value>Name of the column to be added</value>
  </data>
  <data name="ColumnName_DisplayName" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="CreateDataTable_DisplayName" xml:space="preserve">
    <value>Create Data Table</value>
  </data>
  <data name="Database_Category" xml:space="preserve">
    <value>Database Access</value>
  </data>
  <data name="DataRow_Description" xml:space="preserve">
    <value>DataRow to be added</value>
  </data>
  <data name="DataRow_DisplayName" xml:space="preserve">
    <value>DataRow</value>
  </data>
  <data name="DataTableName_Description" xml:space="preserve">
    <value>Name of the table to create</value>
  </data>
  <data name="DataTableName_DisplayName" xml:space="preserve">
    <value>Table Name</value>
  </data>
  <data name="DataTable_Description" xml:space="preserve">
    <value>DataTable object created using the given name</value>
  </data>
  <data name="DataTable_DisplayName" xml:space="preserve">
    <value>DataTable</value>
  </data>
  <data name="DefaultButtons_Description" xml:space="preserve">
    <value>The default button selected when the message box opens.</value>
  </data>
  <data name="DefaultButtons_DisplayName" xml:space="preserve">
    <value>Default Buttons</value>
  </data>
  <data name="DialogResult_Description" xml:space="preserve">
    <value>The result of the user's selection in the message box.</value>
  </data>
  <data name="DialogResult_DisplayName" xml:space="preserve">
    <value>Dialog Result</value>
  </data>
  <data name="ErrorMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Error Message Box</value>
  </data>
  <data name="FatalErrorMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Fatal Error Message Box</value>
  </data>
  <data name="GetEntitiesSqlActivity_DisplayName" xml:space="preserve">
    <value>Get Entities (SQL)</value>
  </data>
  <data name="GetEntityByPrimaryKeyActivity_DisplayName" xml:space="preserve">
    <value>Get Entity By Primary Key</value>
  </data>
  <data name="GetEntitySqlActivity_DisplayName" xml:space="preserve">
    <value>Get Entity (SQL)</value>
  </data>
  <data name="GetPersistenceManagerActivity_DisplayName" xml:space="preserve">
    <value>Get Persistence Manager</value>
  </data>
  <data name="GetPersistenceManagerActivity_PersistenceManager_Description" xml:space="preserve">
    <value>A new persistence manager created by the activity.</value>
  </data>
  <data name="InformationMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Information Message Box</value>
  </data>
  <data name="MessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Message Box Prompt</value>
  </data>
  <data name="Message_Description" xml:space="preserve">
    <value>The message to be displayed in the message box</value>
  </data>
  <data name="Message_DisplayName" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Messaging_Category" xml:space="preserve">
    <value>Message Box</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Multi Option Message Box</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_Items_Description" xml:space="preserve">
    <value>The list of items that will appear in the prompt window</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_Items_DisplayName" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_SelectedIndex_Description" xml:space="preserve">
    <value>The index of the item selected in the list (starting with zero)</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_SelectedIndex_DisplayName" xml:space="preserve">
    <value>Selected Index</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_SelectedText_Description" xml:space="preserve">
    <value>The text of the selected item in the list</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_SelectedText_DisplayName" xml:space="preserve">
    <value>Selected Text</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_ShowCancelButton_Description" xml:space="preserve">
    <value>Sets whether the cancel button will be available on the dialog.</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_ShowCancelButton_DisplayName" xml:space="preserve">
    <value>Show Cancel Button</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_Style_Description" xml:space="preserve">
    <value>Sets whether the prompt will use a drop down or individual buttons to represent the different choices.</value>
  </data>
  <data name="MultiOptionMessageBoxActivity_Style_DisplayName" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="NotificationWindowActivity_DisplayName" xml:space="preserve">
    <value>Notification Prompt</value>
  </data>
  <data name="NotificationWindowActivity_Message_Description" xml:space="preserve">
    <value>The message that will be displayed in the notification window</value>
  </data>
  <data name="NotificationWindowActivity_Message_DisplayName" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="PersistenceManager_Description" xml:space="preserve">
    <value>The persistence manager to use with the query.  If not provided, a new persistence manager will be created.</value>
  </data>
  <data name="PersistenceManager_DisplayName" xml:space="preserve">
    <value>Persistence Manager</value>
  </data>
  <data name="PrimaryKey_Description" xml:space="preserve">
    <value>The primary key value of the record to be looked up.</value>
  </data>
  <data name="PrimaryKey_DisplayName" xml:space="preserve">
    <value>Primary Key</value>
  </data>
  <data name="QueryResult_Description" xml:space="preserve">
    <value>The resulting BOM objects returned from the query provided.</value>
  </data>
  <data name="QueryResult_DisplayName" xml:space="preserve">
    <value>Query Result</value>
  </data>
  <data name="QueryStrategy_Description" xml:space="preserve">
    <value>The query strategy to use.  The default Query Strategy is “Normal”.</value>
  </data>
  <data name="QueryStrategy_DisplayName" xml:space="preserve">
    <value>Query Strategy</value>
  </data>
  <data name="Query_Description" xml:space="preserve">
    <value>The query to be executed.  Should take the form “SELECT * FROM #Table# WHERE...” where the table name used corresponds with the BOM object selected.</value>
  </data>
  <data name="Query_DisplayName" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="Tools_ActivityGroup" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="WarningMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Warning Message Box</value>
  </data>
  <data name="YesAllNoAllCancelMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Yes (All) / No (All) / Cancel Message Box</value>
  </data>
  <data name="YesAllNoCancelMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Yes (All) / No / Cancel Message Box</value>
  </data>
  <data name="YesNoCancelMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Yes / No / Cancel Message Box</value>
  </data>
  <data name="YesNoMessageBoxActivity_DisplayName" xml:space="preserve">
    <value>Yes / No Message Box</value>
  </data>
  <data name="YesNoPromptActivity_DisplayName" xml:space="preserve">
    <value>Yes/No Prompt</value>
  </data>
  <data name="AssignColumnValue_DisplayName" xml:space="preserve">
    <value>Assign Column Value</value>
  </data>
  <data name="DataValue_Description" xml:space="preserve">
    <value>Data Value</value>
  </data>
  <data name="DataValue_DisplayName" xml:space="preserve">
    <value>Data Value</value>
  </data>
  <data name="Debug_Category" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="QuickWatchActivity_DisplayName" xml:space="preserve">
    <value>Quick Watch</value>
  </data>
  <data name="QuickWatchActivity_Description" xml:space="preserve">
    <value>Opens a window that allows you to see the state of an object</value>
  </data>
  <data name="QuickWatchActivity_Object_Description" xml:space="preserve">
    <value>The object to be displayed in the quick watch window.</value>
  </data>
  <data name="QuickWatchActivity_Object_DisplayName" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="ActiveValue_Category" xml:space="preserve">
    <value>Active Values</value>
  </data>
  <data name="GetActiveDeptIdActivity_DisplayName" xml:space="preserve">
    <value>Get Active Dept ID</value>
  </data>
  <data name="GetActivePatientIdActivity_DisplayName" xml:space="preserve">
    <value>Get Active Patient ID</value>
  </data>
  <data name="GetActiveStaffIdActivity_DisplayName" xml:space="preserve">
    <value>Get Active Staff ID</value>
  </data>
  <data name="GetActiveDeptIdActivity_DeptId_Description" xml:space="preserve">
    <value>Active Department ID.</value>
  </data>
  <data name="GetActiveDeptIdActivity_DeptId_DisplayName" xml:space="preserve">
    <value>Department ID</value>
  </data>
  <data name="GetActivePatientIdActivity_PatientId_Description" xml:space="preserve">
    <value>Active Patient ID, null if no patient is selected.</value>
  </data>
  <data name="GetActivePatientIdActivity_PatientId_DisplayName" xml:space="preserve">
    <value>Patient ID</value>
  </data>
  <data name="GetActiveStaffIdActivity_StaffId_Description" xml:space="preserve">
    <value>Active Staff ID, null if no staff is logged in.</value>
  </data>
  <data name="GetActiveStaffIdActivity_StaffId_DisplayName" xml:space="preserve">
    <value>Staff ID</value>
  </data>
  <data name="GetRuntimeMetadata_DisplayName" xml:space="preserve">
    <value>Get Runtime Metadata</value>
  </data>
  <data name="GetRuntimeMetadata_IqaGuid_Description" xml:space="preserve">
    <value>The primary key of the IQAssign record for the script being executed.</value>
  </data>
  <data name="GetRuntimeMetadata_IqaGuid_DisplayName" xml:space="preserve">
    <value>IqaGuid</value>
  </data>
  <data name="GetRuntimeMetadata_IqpGuid_Description" xml:space="preserve">
    <value>The primary key of the IQPrefer record for the script being executed.</value>
  </data>
  <data name="GetRuntimeMetadata_IqpGuid_DisplayName" xml:space="preserve">
    <value>IqpGuid</value>
  </data>
  <data name="GetRuntimeMetadata_IqsGuid_Description" xml:space="preserve">
    <value>The primary key of the IQScript record for the script being executed.</value>
  </data>
  <data name="GetRuntimeMetadata_IqsGuid_DisplayName" xml:space="preserve">
    <value>IqsGuid</value>
  </data>
  <data name="GetRuntimeMetadata_IqsrGuid_Description" xml:space="preserve">
    <value>The primary key of the IQScriptRevision record for the script being executed.</value>
  </data>
  <data name="GetRuntimeMetadata_IqsrGuid_DisplayName" xml:space="preserve">
    <value>IqsrGuid</value>
  </data>
  <data name="GetRuntimeMetadata_ScriptFeature_Description" xml:space="preserve">
    <value>The IScriptFeature object of the trigger point from which the current script was invoked.</value>
  </data>
  <data name="GetRuntimeMetadata_ScriptFeature_DisplayName" xml:space="preserve">
    <value>Script Feature</value>
  </data>
  <data name="GetRuntimeMetadata_ScriptType_Description" xml:space="preserve">
    <value>The IScriptType object of the script being executed.</value>
  </data>
  <data name="GetRuntimeMetadata_ScriptType_DisplayName" xml:space="preserve">
    <value>Script Type</value>
  </data>
  <data name="Key_DisplayName" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Runtime_Category" xml:space="preserve">
    <value>Runtime</value>
  </data>
  <data name="SetRuntimeCacheValueActivity_DisplayName" xml:space="preserve">
    <value>Set Runtime Cache Value</value>
  </data>
  <data name="SetRuntimeCacheValueActivity_Key_Description" xml:space="preserve">
    <value>They key of the value to be set in the runtime value cache.</value>
  </data>
  <data name="SetRuntimeCacheValueActivity_Value_Description" xml:space="preserve">
    <value>The value to be set in the runtime value cache.</value>
  </data>
  <data name="GetRuntimeCacheValueActivity_DisplayName" xml:space="preserve">
    <value>Get Runtime Cache Value</value>
  </data>
  <data name="GetRuntimeCacheValueActivity_Key_Description" xml:space="preserve">
    <value>They key of the value to lookup in the runtime value cache.</value>
  </data>
  <data name="GetRuntimeCacheValueActivity_ResultFound_Description" xml:space="preserve">
    <value>Returns whether a value was found in the runtime value cache.</value>
  </data>
  <data name="GetRuntimeCacheValueActivity_ResultFound_DisplayName" xml:space="preserve">
    <value>Result Found</value>
  </data>
  <data name="GetRuntimeCacheValueActivity_Value_Description" xml:space="preserve">
    <value>The value found in the runtime value cache.</value>
  </data>
  <data name="Value_DisplayName" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Logging_Category" xml:space="preserve">
    <value>Logging</value>
  </data>
  <data name="WriteToUserLog_DisplayName" xml:space="preserve">
    <value>Write To User Log</value>
  </data>
  <data name="WriteToUserLog_LogMessage_Description" xml:space="preserve">
    <value>The message to write to the user log</value>
  </data>
  <data name="WriteToUserLog_LogMessage_DisplayName" xml:space="preserve">
    <value>Log Message</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListItems_Description" xml:space="preserve">
    <value>A list of items that will appear in the check list group. For each item a check box will be created. Each check box is unchecked by default. If an item in the items list is Null (e.g. Nothing) the corresponding check box will be disabled</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListItems_DisplayName" xml:space="preserve">
    <value>Check List Items</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListResult_Description" xml:space="preserve">
    <value>A list of Boolean indicating if a check box is checked (True) or unchecked (False) when pressing OK. If the CANCEL button is pressed all items default to False. The number of items in this list always matches the number of items supplied as input</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListResult_DisplayName" xml:space="preserve">
    <value>Check List Result</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupIndex_Description" xml:space="preserve">
    <value>The index of the radio button to be selected by default. First radio button is at index 0. If none supplied, it will default to -1 and no radio button will be pre-selected</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupIndex_DisplayName" xml:space="preserve">
    <value>Radio Group Index</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_DialogResult_Description" xml:space="preserve">
    <value>The button (OK, CANCEL) pressed by the user in the dialog. The close button of the dialog (top right X) is handled as a Cancel request</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_DialogResult_DisplayName" xml:space="preserve">
    <value>Dialog Result</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_DisplayName" xml:space="preserve">
    <value>Radio Group With a Check List Box</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupItems_Description" xml:space="preserve">
    <value>A list of items that will appear in the radio group. For each item a radio button will be created. If an item in the items list is Null (e.g. Nothing) the corresponding radio button will be disabled</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupItems_DisplayName" xml:space="preserve">
    <value>Radio Group Items</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupResult_Description" xml:space="preserve">
    <value>The index of the radio button that is selected within the radio group when pressing the OK button. If the CANCEL button is pressed, the index always defaults to -1 (i.e no selection). The first radio button has an index of 0</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupResult_DisplayName" xml:space="preserve">
    <value>Radio Group Result</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListTitle_Description" xml:space="preserve">
    <value>Title for the Check list box that will be shown</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_CheckListTitle_DisplayName" xml:space="preserve">
    <value>Check List Title</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupTitle_Description" xml:space="preserve">
    <value>Title for the Radio group box that will be shown</value>
  </data>
  <data name="RadioGroupWithCheckListBoxActivity_RadioGroupTitle_DisplayName" xml:space="preserve">
    <value>Radio Group Title</value>
  </data>
</root>