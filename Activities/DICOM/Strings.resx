<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDoseMatrixEntry_DisplayName" xml:space="preserve">
    <value>Create Dose Matrix Entry </value>
  </data>
  <data name="DcmInstanceID_Description" xml:space="preserve">
    <value>The ID of the DcmInstance in the DcmInstance Table</value>
  </data>
  <data name="DcmInstanceID_DisplayName" xml:space="preserve">
    <value>DcmInstanceID</value>
  </data>
  <data name="DICOM_ActivityGroup" xml:space="preserve">
    <value>DICOM</value>
  </data>
  <data name="RTDose_Category" xml:space="preserve">
    <value>RtDose</value>
  </data>
  <data name="CreateAvsForImageSeriesActivity_DisplayName" xml:space="preserve">
    <value>Create Avs For Image Series Activity</value>
  </data>
  <data name="ImageSeries_Category" xml:space="preserve">
    <value>Image Series </value>
  </data>
  <data name="WorkQueueElementID_Description" xml:space="preserve">
    <value>The Id of the Work Queue Element in the WorkQueueElement table.</value>
  </data>
  <data name="WorkQueueElementID_DisplayName" xml:space="preserve">
    <value>Work Queue Element ID.</value>
  </data>
  <data name="UnitId_Description" xml:space="preserve">
    <value>ID of the Object to be acted on.</value>
  </data>
  <data name="UnitId_DisplayName" xml:space="preserve">
    <value>UnitId</value>
  </data>
  <data name="PopulatePlanAndBeamTablesActivity_DisplayName" xml:space="preserve">
    <value>Process Conventional RTPlan Activity</value>
  </data>
  <data name="ActivityStatus_Description" xml:space="preserve">
    <value>The return result from the Activity</value>
  </data>
  <data name="ActivityStatus_DisplayName" xml:space="preserve">
    <value>Activity Status</value>
  </data>
  <data name="RTPlan_Category" xml:space="preserve">
    <value>RTPlan</value>
  </data>
  <data name="CreateRelatedSeriesLinkRecordActivity_DisplayName" xml:space="preserve">
    <value>Create Related Series Link Record Activity</value>
  </data>
  <data name="RTStructureSet_Category" xml:space="preserve">
    <value>RT StructureSet</value>
  </data>
  <data name="WaitForStructureSetObjectActivity_DisplayName" xml:space="preserve">
    <value>Wait for Structure Set Referenced data</value>
  </data>
  <data name="OutUnitId_Description" xml:space="preserve">
    <value>UnitId Pass through, Allows to convey to the following activity.</value>
  </data>
  <data name="OutUnitId_DisplayName" xml:space="preserve">
    <value>OutUnitId</value>
  </data>
  <data name="IdentifySpatialRegistrationObject_DisplayName" xml:space="preserve">
    <value>Identify Spatial Registration Object</value>
  </data>
  <data name="SpatialRegistration_Category" xml:space="preserve">
    <value>Spatial Registration</value>
  </data>
  <data name="ParseTreatmentPlanningSpatialRegistrationObject_DisplayName" xml:space="preserve">
    <value>Parse Treatment Planning Based Spatial Registration Object</value>
  </data>
  <data name="ParseTreatmentDeliverySpatialRegistrationObject_DisplayName" xml:space="preserve">
    <value>Parse Treatment Delivery Based Spatial Registration Object</value>
  </data>
  <data name="CreateFrameOfReferenceRelationshipRecord_DisplayName" xml:space="preserve">
    <value>Create Frame Of Reference Relationship Record</value>
  </data>
  <data name="CreateRegistrationRecord_DisplayName" xml:space="preserve">
    <value>Create Registration Record</value>
  </data>
  <data name="UpdateFrameOfReferenceRelationshipRecord_DisplayName" xml:space="preserve">
    <value>Update Frame Of Reference Relationship Record</value>
  </data>
  <data name="UpdateRegistrationRecord_DisplayName" xml:space="preserve">
    <value>Update Registration Record</value>
  </data>
  <data name="DisplaySpatialRegistrationDataNavigator_DisplayName" xml:space="preserve">
    <value>Display Spatial Registration Data Navigator</value>
  </data>
  <data name="WaitForSpatialRegistrationImageDataActivity_DisplayName" xml:space="preserve">
    <value>Wait for Spatial Registration Dependent Images</value>
  </data>
  <data name="CreateOffsetRecord_DisplayName" xml:space="preserve">
    <value>Create Offset Record</value>
  </data>
  <data name="UpdateOffsetRecord_DisplayName" xml:space="preserve">
    <value>Update Offset Record</value>
  </data>
  <data name="CreateAnatomySetsActivity_DisplayName" xml:space="preserve">
    <value>Create the Anatomy Sets for the RTSS</value>
  </data>
  <data name="ProcessDoseCreateDoseVolume_DisplayName" xml:space="preserve">
    <value>Create the Dose Volume</value>
  </data>
  <data name="WaitForDoseObjectPlanActivity_DisplayName" xml:space="preserve">
    <value>Wait for Dose Referenced Plan Data</value>
  </data>
  <data name="GenerateSurfaceMeshActivity_DisplayName" xml:space="preserve">
    <value>Generate the Surface Mesh for the RTSS</value>
  </data>
  <data name="OutStructureSetIds_Description" xml:space="preserve">
    <value>Structure Set UnitIds to convey to following Activities.</value>
  </data>
  <data name="OutStructureSetIds_DisplayName" xml:space="preserve">
    <value>OutStructureSetIds</value>
  </data>
  <data name="WaitForDoseObjectStructureSetDataActivity_DisplayName" xml:space="preserve">
    <value>Wait for Dose Volume Dependent Structure Set </value>
  </data>
  <data name="OutPlanUnitId_Description" xml:space="preserve">
    <value>RT Plan unit id associated with this dose.</value>
  </data>
  <data name="OutPlanUnitId_DisplayName" xml:space="preserve">
    <value>RTPlanUnitId</value>
  </data>
  <data name="GetReferencePlanInstancesForADose_DisplayName" xml:space="preserve">
    <value>Get Referencec Plan Instances For a, RTDose</value>
  </data>
  <data name="ReferencedPlanSOPInstances_Description" xml:space="preserve">
    <value>An array of referenced plan instances for an RTDose</value>
  </data>
  <data name="ReferencedPlanSOPInstances_DisplayName" xml:space="preserve">
    <value>Referenced Plan SOP Instances</value>
  </data>
  <data name="IsObjectSimpleAndGenericSpatialRegistration_DisplayName" xml:space="preserve">
    <value>Is Object a Simple and Generic Spatial Registration</value>
  </data>
  <data name="ProcessGenericSpatialRegistration_DisplayName" xml:space="preserve">
    <value>Process Generic Spatial Registration</value>
  </data>
  <data name="ConvertExistingVolumesActivity_DisplayName" xml:space="preserve">
    <value>Convert Existing Volumes for Image Series Activity</value>
  </data>
  <data name="IsObjectTreatmentDeliveryBased_DisplayName" xml:space="preserve">
    <value>Is Object Treatment Delivery Based</value>
  </data>
  <data name="WaitForSpatialRegistrationStructureSetDataActivity_DisplayName" xml:space="preserve">
    <value>Wait for Spatial Registration Dependent Structure Set</value>
  </data>
  <data name="SaveStructureSetSpatialIsocenterCoordinates_DisplayName" xml:space="preserve">
    <value>Save the Spatial Isocenter Coordinates from an RT Structure Set</value>
  </data>
  <data name="ExtractStructureSetSpatialIsocenterCoordinates_DisplayName" xml:space="preserve">
    <value>Extract the Spatial Isocenter Coordinates from an RT Structure Set</value>
  </data>
  <data name="PopulateRPSTablesActivity_DisplayName" xml:space="preserve">
    <value>Populate VRS records from XVI RPS</value>
  </data>
  <data name="RPS_Category" xml:space="preserve">
    <value>RPS XVI Reference Parameter Set</value>
  </data>
  <data name="PurgeAvsForImageSeriesActivity_DisplayName" xml:space="preserve">
    <value>Purge Avs For Image Series Activity</value>
  </data>
  <data name="PopulateLGKRegistryHoldingTableActivity_DisplayName" xml:space="preserve">
    <value>Populate LGK Registry Holding Table with Gamma Plan Information</value>
  </data>
  <data name="RegenerateAvsForImageSeriesActivity_DisplayName" xml:space="preserve">
    <value>Regenerate Avs For Image Series Activity</value>
  </data>
  <data name="PurgeAVS_Category" xml:space="preserve">
    <value>Purge AVS</value>
  </data>
  <data name="IsObjectXVI5xSpatialRegistrationObject_DisplayName" xml:space="preserve">
    <value>Is Object an XVI 5.x Spatial Registration</value>
  </data>
  <data name="WaitForSpatialRegistrationRPSDataActivity_DisplayName" xml:space="preserve">
    <value>Wait for Spatial Registration RPS Data</value>
  </data>
  <data name="OutRPSUnitId_Description" xml:space="preserve">
    <value>RPS UnitId Pass through, Allows to convey to the following activity.</value>
  </data>
  <data name="OutRPSUnitId_DisplayName" xml:space="preserve">
    <value>RPS UnitId</value>
  </data>
  <data name="RPSUid_Description" xml:space="preserve">
    <value>SOP Instance UID of the RPS object</value>
  </data>
  <data name="RPSUid_DisplayName" xml:space="preserve">
    <value>RPSUid</value>
  </data>
  <data name="ProcessXVI5xSpatialRegistration_DisplayName" xml:space="preserve">
    <value>Process XVI 5.x Spatial Registration</value>
  </data>
  <data name="RpsUnitId_Description" xml:space="preserve">
    <value>DCMInstance ID of the RPS</value>
  </data>
  <data name="RpsUnitId_DisplayName" xml:space="preserve">
    <value>RPS UnitId</value>
  </data>
  <data name="SroUnitId_Description" xml:space="preserve">
    <value>DCMInstance ID of the SRO</value>
  </data>
  <data name="SroUnitId_DisplayName" xml:space="preserve">
    <value>SRO UnitId</value>
  </data>
  <data name="ParseXVI5xSpatialRegistrationObject_DisplayName" xml:space="preserve">
    <value>Parse XVI 5.x Spatial Registration Object</value>
  </data>
  <data name="WaitForXVI5xSpatialRegistrationImageDataActivity_DisplayName" xml:space="preserve">
    <value>Wait for Dependent Images for XVI 5x Spatial Registration </value>
  </data>
  <data name="SiteID_Description" xml:space="preserve">
    <value>Site SET ID of the Site</value>
  </data>
  <data name="SiteID_DisplayName" xml:space="preserve">
    <value>SiteID</value>
  </data>
  <data name="InsertIViewGTRTImagePositionActivity_DisplayName" xml:space="preserve">
    <value>Insert RT Image Position value into an RT-Image from iViewGT</value>
  </data>
  <data name="IViewGTPortalImageFilename_Description" xml:space="preserve">
    <value>DICOM RTImage file pathname of a portal image from iViewGT</value>
  </data>
  <data name="IViewGTPortalImageFilename_DisplayName" xml:space="preserve">
    <value>IViewGTPortalImageFilename</value>
  </data>
  <data name="IViewGTRTImage_Category" xml:space="preserve">
    <value>RTImage from iViewGT</value>
  </data>
  <data name="LocateIViewGTRTImagePositionActivity_DisplayName" xml:space="preserve">
    <value>Compute RT Image Position value for an RT-Image from iViewGT</value>
  </data>
  <data name="RtImagePositionXmm_Description" xml:space="preserve">
    <value>X Coordinate, in millimeters, for DICOM RT Image Position (3002, 0012) attribute</value>
  </data>
  <data name="RtImagePositionXmm_DisplayName" xml:space="preserve">
    <value>RTImagePositionX</value>
  </data>
  <data name="RtImagePositionYmm_Description" xml:space="preserve">
    <value>Y Coordinate, in millimeters, for DICOM RT Image Position (3002, 0012) attribute</value>
  </data>
  <data name="RtImagePositionYmm_DisplayName" xml:space="preserve">
    <value>RTImagePositionY</value>
  </data>
  <data name="CheckIViewGTAutoIsocExclusionsActivity_DisplayName" xml:space="preserve">
    <value>Check iViewGT Auto-Isocenter Exclusions</value>
  </data>
  <data name="MoveIViewGTRTImageFileToStagingAreaActivity_DisplayName" xml:space="preserve">
    <value>Move iViewGT RT Image file to Staging Area</value>
  </data>
  <data name="UpdatedFilename_Description" xml:space="preserve">
    <value>DICOM RT Image file with updated RT Image Position</value>
  </data>
  <data name="UpdatedFilename_DisplayName" xml:space="preserve">
    <value>UpdatedFilename</value>
  </data>
  <data name="PostRegenerateAvsForImageSeriesActivity_DisplayName" xml:space="preserve">
    <value>Post Regeneration Request for related prior DCMseries.</value>
  </data>
  <data name="WaitForVolumeAVSFileToBeAvailableActivity_DisplayName" xml:space="preserve">
    <value>Wait For Volume AVS file to be created.</value>
  </data>
  <data name="SendSroProcessedMessage_DisplayName" xml:space="preserve">
    <value>Send SRO Processed Message</value>
  </data>
</root>